dna:
  meta-directory: "C:\\Develop\\Projects\\dna-app\\meta"
  template-parameters-directory: "${dna.meta-directory}\\templated"
  rest-api-directory: "${dna.meta-directory}\\rest"
  rest-errors-file: "${dna.meta-directory}\\rest\\rest-errors.yaml"
spring:
  application:
    name: dna-app
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/portal
    username: vtw
    password: vtw123#
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org:
        quartz:
          scheduler:
            instanceId: Central
            instanceName: ${dna.app.name}
          jobStore:
            dataSource: quartzDataSource
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            useProperties: false
            tablePrefix: QRTZ_
            misfireThreshold: 1000
            clusterCheckinInterval: 1000
            isClustered: true
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
          dataSource:
            quartzDataSource:
              provider: hikaricp
              driver: ${spring.datasource.driver-class-name}
              URL: ${spring.datasource.url}
              user: ${spring.datasource.username}
              password: ${spring.datasource.password}
    auto-startup: true
mybatis:
  mapper-locations: classpath:mybatis/mappers/**/*.xml
  configuration:
    jdbc-type-for-null: null
    map-underscore-to-camel-case: true
camel:
  main:
    routes-include-pattern: "file:camel/**/*.camel.yaml"
    shutdown-timeout: 1
  rest:
    binding-mode: json
    xml-data-format: jacksonXml
    api-context-path: api-doc
    api-property:
      host: localhost:8080
      "base.path": "/"
      schemes: [ http, https ]
      "api.default.consumes": application/json,application/xml
      "api.default.produces": application/json,application/xml
      "api.title": 교수학습 연계 API
      "api.version": 1.0.0
    enable-cors: true
    cors-headers:
      "Access-Control-Allow-Origin": "*"
      "Access-Control-Allow-Headers": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, Authorization"
    api-vendor-extension: true
    api-host: localhost
    use-x-forward-headers: false
  dataformat:
    jackson:
      auto-discover-object-mapper: true
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
